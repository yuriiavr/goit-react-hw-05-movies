{"version":3,"file":"static/js/714.0ea60003.chunk.js","mappings":"4TAEMA,EAAM,mCACNC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACiBC,IAAAA,IAAA,UACjBF,EADiB,uCACsBD,IAFvC,cACCI,EADD,OAKCC,EAAkBD,EAAQE,KAAKC,QAAQC,KAAI,SAAAC,GAC/C,MAAO,CACLC,GAAID,EAAEC,GACNC,UAAWF,EAAEG,eAEhB,IAVI,kBAWEP,GAXF,kEAcA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACiBX,IAAAA,IAAA,UACjBF,EADiB,gCACeD,EADf,iCAC2Cc,EAD3C,+BADjB,cACCV,EADD,OAICC,EAAkBD,EAAQE,KAAKC,QAAQC,KAAI,SAAAC,GAC/C,MAAO,CACLC,GAAID,EAAEC,GACNC,UAAWF,EAAEG,eAEhB,IATI,kBAUEP,GAVF,kEAaA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACiBb,IAAAA,IAAA,UACjBF,EADiB,iBACAe,EADA,oBACmBhB,EADnB,oBADjB,cACCI,EADD,OAICC,EAAkB,CAACD,EAAQE,MAAME,KAAI,SAAAC,GACzC,MAAO,CACLQ,OAAO,mCAAD,OAAqCR,EAAES,aAC7CC,IAAKV,EAAEW,QACPT,UAAWF,EAAEG,eACbS,UAAWZ,EAAEa,aACbC,SAAUd,EAAEc,SACZC,OAAQf,EAAEe,OAAOhB,KAAI,SAAAiB,GAAK,OAAIA,EAAMC,IAAV,IAE7B,IAbI,kBAcErB,GAdF,kEAiBA,SAAesB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BX,GAA5B,yFACiBb,IAAAA,IAAA,UACjBF,EADiB,iBACAe,EADA,4BAC2BhB,EAD3B,oBADjB,cACCI,EADD,OAICC,EAAkBD,EAAQE,KAAKsB,KAAKpB,KAAI,SAAAC,GAC5C,MAAO,CACLoB,OAAQpB,EAAEqB,QACVJ,KAAMjB,EAAEsB,cACRC,UAAWvB,EAAEuB,UACbC,gBAAgB,mCAAD,OAAqCxB,EAAEyB,cAEzD,IAXI,kBAYE7B,GAZF,kEAeA,SAAe8B,EAAtB,+CAAO,OAAP,oBAAO,WAAgCnB,GAAhC,yFACiBb,IAAAA,IAAA,UACjBF,EADiB,iBACAe,EADA,4BAC2BhB,EAD3B,oBADjB,cACCI,EADD,OAICC,EAAkBD,EAAQE,KAAKC,QAAQC,KAAI,SAAAC,GAC/C,MAAO,CACL2B,SAAU3B,EAAEC,GACZ2B,OAAQ5B,EAAE4B,OACVC,OAAQ7B,EAAE8B,QAEb,IAVI,kBAWElC,GAXF,kE,yHC5DQ,SAASmC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOH,EAAP,KAAeI,EAAf,KACQ1B,GAAY2B,EAAAA,EAAAA,MAAZ3B,QAKR,OAHA4B,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA8B7B,GAAS8B,KAAKJ,EAC7C,GAAE,CAAC1B,KAEF,iCACE,kBACEsB,GAA4B,IAAlBA,EAAOS,OAKjBT,EAAO9B,KAAI,SAAAwC,GACT,OACE,4BACE,wBAAKA,EAAGX,UACR,uBAAIW,EAAGV,WAFCU,EAAGZ,SAKhB,KAXD,kGAeP,C","sources":["services/movies-api.js","views/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '427d649d47521953b8ebcbfa8ebabdc8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getPopularMovies() {\n  const request = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n\n  const detailedRequest = request.data.results.map(e => {\n    return {\n      id: e.id,\n      movieName: e.original_title,\n    };\n  });\n  return detailedRequest;\n}\n\nexport async function searchMovies(query) {\n  const request = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=true`\n  );\n  const detailedRequest = request.data.results.map(e => {\n    return {\n      id: e.id,\n      movieName: e.original_title,\n    };\n  });\n  return detailedRequest;\n}\n\nexport async function getMovieDetails(movieId) {\n  const request = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  const detailedRequest = [request.data].map(e => {\n    return {\n      poster: `https://image.tmdb.org/t/p/w500/${e.poster_path}`,\n      tag: e.tagline,\n      movieName: e.original_title,\n      userScore: e.vote_average,\n      overview: e.overview,\n      genres: e.genres.map(genre => genre.name),\n    };\n  });\n  return detailedRequest;\n}\n\nexport async function getMovieCast(movieId) {\n  const request = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  const detailedRequest = request.data.cast.map(e => {\n    return {\n      castId: e.cast_id,\n      name: e.original_name,\n      character: e.character,\n      castMemberPhoto: `https://themoviedb.org/t/p/w500/${e.profile_path}`,\n    };\n  });\n  return detailedRequest;\n}\n\nexport async function getMoviesReviews(movieId) {\n  const request = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n  );\n  const detailedRequest = request.data.results.map(e => {\n    return {\n      reviewId: e.id,\n      author: e.author,\n      review: e.content,\n    };\n  });\n  return detailedRequest;\n}","import { useState, useEffect } from 'react';\nimport * as getReviewAPI from 'services/movies-api';\nimport { useParams } from 'react-router-dom';\n\nexport default function Reviews() {\n  const [review, setReview] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviewAPI.getMoviesReviews(movieId).then(setReview);\n  }, [movieId]);\n  return (\n    <>\n      <hr />\n      {!review || review.length === 0 ? (\n        <p>\n          There are no reviews yet. Become the first, who will write a review!\n        </p>\n      ) : (\n        review.map(el => {\n          return (\n            <div key={el.reviewId}>\n              <h5>{el.author}</h5>\n              <p>{el.review}</p>\n            </div>\n          );\n        })\n      )}\n    </>\n  );\n}"],"names":["KEY","BASE_URL","getPopularMovies","axios","request","detailedRequest","data","results","map","e","id","movieName","original_title","searchMovies","query","getMovieDetails","movieId","poster","poster_path","tag","tagline","userScore","vote_average","overview","genres","genre","name","getMovieCast","cast","castId","cast_id","original_name","character","castMemberPhoto","profile_path","getMoviesReviews","reviewId","author","review","content","Reviews","useState","setReview","useParams","useEffect","getReviewAPI","then","length","el"],"sourceRoot":""}